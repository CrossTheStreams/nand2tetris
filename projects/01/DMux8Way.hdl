// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111

 *       a if sel == 000 **
 *       b if sel == 001 **
         c if sel == 010  **
         d if sel == 011 **
         e if sel == 100 **
         f if sel == 101 **
         g if sel == 110 **
         h if sel == 111 **
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:

    Not(in=sel[2], out=zeroa2);
    Not(in=sel[1], out=zeroa1);
    Not(in=sel[0], out=zeroa0);
    And(a=zeroa0, b=zeroa1, out=zerosa01);
    And(a=zerosa01, b=zeroa2, out=allazeros);
    And(a=allazeros, b=in, out=a);

    Not(in=sel[2], out=zerob2);
    Not(in=sel[1], out=zerob1);
    And(a=zerob2, b=zerob1, out=zerosb21);
    And(a=zerosb21, b=sel[0], out=yesb);
    And(a=yesb, b=in, out=b);

    Not(in=sel[2], out=zeroc2);
    Not(in=sel[0], out=zeroc0);
    And(a=zeroc2, b=zeroc0, out=zerosc20);
    And(a=zerosc20, b=sel[1], out=yesc);
    And(a=yesc, b=in, out=c);

    And(a=sel[0], b=sel[1], out=yes01);
    Not(in=sel[2], out=not2);
    And(a=yes01, b=not2, out=yesd);
    And(a=yesd, b=in, out=d);

    And(a=sel[2], b=zerosa01, out=yese);
    And(a=yese, b=in, out=e);

    And(a=sel[2], b=sel[1], out=yes21);
    And(a=sel[0], b=yes21, out=allyes);
    And(a=allyes, b=in, out=h);

    And(a=sel[1], b=sel[2], out=gorh);
    Xor(a=allyes, b=gorh, out=yesg);
    And(a=yesg, b=in, out=g);

    And(a=sel[0], b=sel[2], out=forh);
    Xor(a=allyes, b=forh, out=yesf);
    And(a=yesf, b=in, out=f);

}